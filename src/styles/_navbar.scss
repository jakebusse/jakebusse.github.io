// _navbar.scss

@use "breakpoints" as *;

nav {
  height: var(--navbar-height);
  padding: 0px var(--navbar-padding-x);
  background-color: var(--navbar-background);
  color: var(--navbar-font-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: sticky;
  top: 0;
  transition: box-shadow 0.5s ease;

  &.floating {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);

    .gradient-text {
      background: linear-gradient(
        -90deg,
        var(--secondary-color),
        var(--primary-color)
      );
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
    }
  }

  .gradient-text {
    font-size: 2rem;
    font-weight: 800;
    transition: all 0.5s ease;
  }

  .gradient-text,
  .social-links {
    width: 250px;
  }

  .nav-toggle {
    width: 30px;
    height: 30px;
    position: relative;
    margin: 10px;
    cursor: pointer;
    display: none;
    transition: 0.2s ease;
    transform-origin: center;
    z-index: 999;

    @include respond(sm) {
      display: inline-block;
    }

    $dot-size: 5px;
    $gap: 12px;

    span {
      width: $dot-size;
      height: $dot-size;
      background-color: #fff;
      display: block;
      border-radius: 50%;
      position: absolute;
      transform-origin: center;
      transition: 0.3s ease;

      // Position dots in a 3x3 grid using only top & left
      @for $i from 1 through 9 {
        &:nth-child(#{$i}) {
          $row: floor(($i - 1) / 3);
          $col: ($i - 1) % 3;
          top: $row * $gap;
          left: $col * $gap;
        }
      }
    }

    &:hover span {
      transform: scale(1.1);
    }

    &.open {
      transform: rotate(180deg);

      span {
        transition-delay: 200ms;
        transition: 0.5s cubic-bezier(0.8, 0.5, 0.2, 1.4);

        // Animate select dots to form new pattern
        $custom-open-positions: (
          2: (
            left: 6px,
            top: 6px,
          ),
          4: (
            left: 6px,
            top: 18px,
          ),
          6: (
            left: 18px,
            top: 6px,
          ),
          8: (
            left: 18px,
            top: 18px,
          ),
        );

        @each $i, $props in $custom-open-positions {
          &:nth-child(#{$i}) {
            @each $prop, $val in $props {
              #{$prop}: $val;
            }
          }
        }
      }
    }
  }

  .navbar-links {
    display: flex;
    align-items: center;

    @include respond(sm) {
      display: none;

      &.open {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 20px;
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: var(--primary-color);
        padding-top: calc(var(--navbar-height) + 20px);
        z-index: 998;

        a,
        .button {
          font-size: 2rem;
        }

        ~ .social-links {
          display: flex;
          position: fixed;
          bottom: 20px;
          right: 0;
          width: 100vw;
          padding: 0px var(--navbar-padding-x);
          z-index: 999;
        }
      }
    }

    a {
      color: var(--navbar-font-color);
      text-decoration: none;
      font-size: 1rem;
      margin: 0 15px;
      transition: color 0.3s ease-in-out;

      &.navlink {
        position: relative;
        display: inline-block;
        padding-bottom: 4px;
        line-height: 1;

        &::after {
          content: "";
          position: absolute;
          left: 50%;
          bottom: 0;
          width: 0;
          height: 1px;
          background: currentColor;
          transition:
            width 0.3s ease,
            left 0.3s ease;
        }

        &:hover::after {
          width: 100%;
          left: 0;
        }
      }
    }

    .button {
      background-color: var(--primary-color);
      color: var(--font-color);

      @include respond(sm) {
        background-color: var(--secondary-color);
      }
    }
  }

  .social-links {
    display: flex;

    @include respond(sm) {
      display: none;
    }
  }
}
